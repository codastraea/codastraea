/* The `ThreadView` component */
.thread-view {
    /* Minimum height for dropdown menus */
    min-height: 200px;
    /* Allow panning and zooming, but disallow double tap so there's no delay when
    /* single clicking on controls. */
    touch-action: manipulation;
}

.thread-view--item {
    position: relative;
    clip-path: polygon(
        0 0,
        40px 0,
        46px 6px,
        66px 6px,
        72px 0,
        100% 0, 
        100% 100%,
        72px 100%,
        66px calc(100% + 6px),
        46px calc(100% + 6px),
        40px 100%,
        0 100%,
        0 0
    );
}

.thread-view--item::after {
    position: absolute;
    content: "";
    width: 32px;
    height: 6px;
    left: 40px;
    bottom: -6px;
    background-color: inherit;
}

.thread-view--node-list {
    gap: 1px;
}

.thread-view--node-status-icon {
    background-color: var(--bs-white);
    clip-path: circle(closest-side);
    padding: 2px;
}

/* An element with an expanding/contracting animation */
.animated-expanding-node {
    width: 100%;
    height: 100%;
    transition: all 200ms;
}

/* A speech bubble with an arrow on top for displaying below another element */
.speech-bubble-below {
    --arrow-size: 12px;
    --arrow-offset: 24px;
    position: relative;
}

.speech-bubble-below::before,
.speech-bubble-below::after {
    border: var(--arrow-size) solid transparent;
    content: "";
    position: absolute;
    left: var(--arrow-offset);
    width: 0;
    height: 0;
}

.speech-bubble-below::before {
    border-bottom-color: var(--bs-secondary);
    top: calc(-2 * var(--arrow-size));
}

.speech-bubble-below::after {
    border-bottom-color: var(--bs-white);
    top: calc(-2 * var(--arrow-size) + 1px);
}

.horizontal_splitter_bar {
    background-color: var(--bs-secondary);
    width: 4px;
    align-self: stretch;
    cursor: col-resize;
}